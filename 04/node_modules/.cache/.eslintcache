[{"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\calendrier-reactjs\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\calendrier-reactjs\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\calendrier-reactjs\\src\\components\\Menu\\Menu.jsx":"3","C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\calendrier-reactjs\\src\\components\\Calendrier\\Calendrier.jsx":"4","C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\exercices-javascript\\04\\src\\index.js":"5","C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\exercices-javascript\\04\\src\\App.js":"6","C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\exercices-javascript\\04\\src\\components\\Menu\\Menu.jsx":"7","C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\exercices-javascript\\04\\src\\components\\Calendrier\\Calendrier.jsx":"8"},{"size":242,"mtime":1646692480092,"results":"9","hashOfConfig":"10"},{"size":473,"mtime":1646692480086,"results":"11","hashOfConfig":"10"},{"size":472,"mtime":1646693460318,"results":"12","hashOfConfig":"10"},{"size":17320,"mtime":1646693425103,"results":"13","hashOfConfig":"10"},{"size":242,"mtime":1646692480092,"results":"14","hashOfConfig":"15"},{"size":473,"mtime":1646692480086,"results":"16","hashOfConfig":"15"},{"size":472,"mtime":1646693460318,"results":"17","hashOfConfig":"15"},{"size":17320,"mtime":1646947873029,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zshpj2",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sxmmya",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\calendrier-reactjs\\src\\index.js",[],[],"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\calendrier-reactjs\\src\\App.js",[],[],"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\calendrier-reactjs\\src\\components\\Menu\\Menu.jsx",[],[],"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\calendrier-reactjs\\src\\components\\Calendrier\\Calendrier.jsx",["44"],[],"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\exercices-javascript\\04\\src\\index.js",[],[],"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\exercices-javascript\\04\\src\\App.js",[],[],"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\exercices-javascript\\04\\src\\components\\Menu\\Menu.jsx",[],[],"C:\\Users\\USER\\Desktop\\vm_test\\H3Hitema\\JavaScript\\exercices-javascript\\04\\src\\components\\Calendrier\\Calendrier.jsx",["45"],[],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Form, Table , Button, Card } from 'react-bootstrap';\r\nimport \"./css.css\";\r\n\r\nconst URL_DB = \"http://localhost:3003/rdv\";\r\nconst dateDebutCalendrier = new Date(\"December 28, 2000\");\r\nconst dateFinCalendrier = new Date(\"January 30, 2040\");\r\n\r\nexport default function Calendrier() {\r\n\r\n    const [annees, setAnnees] = useState();\r\n    const [mois, setMois] = useState();\r\n    const [jour, setJour] = useState();\r\n\r\n    const [calendrier, setCalendrier] = useState([]);\r\n\r\n    const [currentMonth , setCurrentMonth] = useState([]);\r\n    const [dateChoisi, setDateChoisi] = useState();\r\n\r\n    const [rdv , setRdv] = useState({\r\n        titre : \"\",\r\n        commentaire :\"\",\r\n    });\r\n\r\n    const [allRDV, setAllRdv] = useState([]);\r\n    const [rdvDuJourChoisi, setRdvDuJourChoisi] = useState([]);\r\n\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    \r\n    const nomMois = [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\",\r\n    \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Decembre\"\r\n    ];\r\n    const jourDeSemaine = [\"Dimanche\",\"Lundi\", \"Mardi\",\"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"];\r\n\r\n    const onChange= (e) =>{\r\n        const {name , value}= e.target ;\r\n        setRdv(prevForm =>{ \r\n            return  {...prevForm , [name]: value} \r\n        })\r\n    }\r\n    const prevMonth = () => {\r\n        console.log(mois-1); // Mois précédent \r\n        if(mois-1 === 0){\r\n            setMois(12);\r\n            setAnnees(annees-1);\r\n        }   \r\n        else setMois(mois-1);\r\n    }\r\n    const nextMonth = () => {\r\n        console.log(mois+1); // Mois suivant\r\n        if(mois+1 === 13){\r\n            setMois(1);\r\n            setAnnees(annees+1);\r\n        }\r\n        else setMois(mois+1);\r\n    }\r\n    const nextYear = () => {\r\n        console.log(annees+1); // Année suivante\r\n        setAnnees(annees+1);\r\n    }\r\n    const prevYear = () => {\r\n        console.log(annees-1); // Année précedente\r\n        setAnnees(annees-1);\r\n    }\r\n    const dayClick = (a) => {\r\n        console.log(a);\r\n        setDateChoisi(a.toLocaleDateString('fr-FR',options));\r\n    }\r\n    const supprimerRdv = (e, rdv) => {\r\n        e.preventDefault();\r\n        axios.delete(URL_DB + `/${rdv.id}`).then(res=> console.log(res));\r\n    }\r\n    const prendreRdv = (e) =>{\r\n        e.preventDefault();\r\n        console.log(dateChoisi);\r\n        console.log(rdv);\r\n        let obj = {\r\n            titre : rdv.titre,\r\n            commentaire : rdv.commentaire,\r\n            date : dateChoisi\r\n        }\r\n        axios.post(URL_DB, obj).then(res => console.log(res));\r\n    }\r\n    useEffect(() => {\r\n        const result = calendrier.filter(c => (c.getMonth()) === (mois-1) && c.getFullYear() === annees);\r\n        setCurrentMonth(result);\r\n        setDateChoisi();\r\n    }, [annees,jour,mois]);\r\n    useEffect(() => {\r\n        axios.get(URL_DB+`?date=${dateChoisi}`).then(res => setRdvDuJourChoisi(res.data));\r\n    }, [dateChoisi]);\r\n    useEffect(() => {\r\n        setAllRdv([]);\r\n        const date = new Date();\r\n        setMois(date.getMonth()+1);\r\n        setAnnees(date.getFullYear());\r\n        setJour(date.getDate());\r\n        var r = [];\r\n        while (dateDebutCalendrier <= dateFinCalendrier)\r\n        {\r\n            r.push(new Date(dateDebutCalendrier.setDate(dateDebutCalendrier.getDate() + 1)));\r\n        }\r\n        setCalendrier(r);\r\n        setRdvDuJourChoisi([]);\r\n        axios.get(URL_DB).then(res => setAllRdv(res.data));\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='row text-center mt-5'>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <button className='btn btn-dark prev' onClick={()=> prevMonth()}> &lt; </button>    \r\n                            <b className='mt-2'>{nomMois[mois-1]}</b>\r\n                            <button className='btn btn-dark next' onClick={() => nextMonth()}> &gt; </button>    \r\n                        </div>\r\n                        <div className=\"mt-2 d-flex justify-content-center\">\r\n                            <button className='btn btn-dark prev' onClick={() => prevYear()}> &lt; </button>    \r\n                            <b className='mt-2'>{annees}</b>\r\n                            <button className='btn btn-dark next' onClick={() => nextYear()}> &gt; </button>    \r\n                        </div>\r\n                    </div>\r\n                    <Table bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                {currentMonth.length > 0 && currentMonth.slice(0,7).map(a => {\r\n                                    return <th scope=\"col\">{jourDeSemaine[a.getDay()]}</th>\r\n                                })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='body-table'>\r\n                                {/* Premiere Semaine */}\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(0,7).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(new Date().toLocaleDateString('fr-FR',options) === a.toLocaleDateString('fr-FR',options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(7,14).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(new Date().toLocaleDateString('fr-FR',options) === a.toLocaleDateString('fr-FR',options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(14,21).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(new Date().toLocaleDateString('fr-FR',options) === a.toLocaleDateString('fr-FR',options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                    \r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(21,28).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(new Date().toLocaleDateString('fr-FR',options) === a.toLocaleDateString('fr-FR',options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        \r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(28,35).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(rdvs.length>0){\r\n                                        \r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                    \r\n                                })}\r\n                                </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className='col-md-6'>\r\n                    <Form style={{width:'30em'}}>\r\n                        <h3>Formulaire</h3>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRDV_titre\">\r\n                            <Form.Control className=\"text-center\" type=\"text\" placeholder=\"Enter le titre du RDV\" name=\"titre\" onChange={onChange}/>\r\n                        </Form.Group>\r\n                        <input type=\"textarea\" \r\n                                name=\"commentaire\"\r\n                                placeholder=\"Enter votre commentaire\"\r\n                                style={{width:'30em'}}\r\n                                onChange={onChange}\r\n                                className='text-center'\r\n                        />\r\n                        \r\n                        <Form.Group className=\"mb-3 mt-3\" controlId=\"formRDV_date\">\r\n                            <Form.Control className=\"text-center\" type=\"text\" placeholder=\"Choisissez votre date\" name=\"date\" disabled={true} value={dateChoisi}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"success\" type=\"submit\" onClick={(e)=> prendreRdv(e)}>\r\n                            Prendre RDV\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <div className=\"row text-center mt-5\">\r\n                <h4>Les RDV</h4>\r\n                {rdvDuJourChoisi.length>0 && \r\n                    rdvDuJourChoisi.map(rdv => {\r\n                        return <Card style={{ width: '18rem' }} className=\"col-md-4\">\r\n                        <Card.Body>\r\n                            <Card.Title>{rdv.titre}</Card.Title>\r\n                            <Card.Text>\r\n                                {rdv.commentaire}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Card.Text>{rdv.date}</Card.Text>\r\n                        </Card.Footer>\r\n                        <Card.Body>\r\n                            <Button className='btn btn-warning small' onClick={(e)=> supprimerRdv(e,rdv)}>Supprimer</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    })\r\n                }\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n",{"ruleId":"46","severity":1,"message":"47","line":89,"column":8,"nodeType":"48","endLine":89,"endColumn":26,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"47","line":89,"column":8,"nodeType":"48","endLine":89,"endColumn":26,"suggestions":"50"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calendrier'. Either include it or remove the dependency array.","ArrayExpression",["51"],["52"],{"desc":"53","fix":"54"},{"desc":"53","fix":"55"},"Update the dependencies array to be: [annees, calendrier, jour, mois]",{"range":"56","text":"57"},{"range":"58","text":"57"},[2883,2901],"[annees, calendrier, jour, mois]",[2883,2901]]